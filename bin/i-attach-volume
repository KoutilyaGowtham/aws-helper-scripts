#!/bin/bash
# Attach, Format and Persistently Mount an EBS Volume

source $(dirname $0)/../inc/ec2-include

if [ ! $3 ]; then
  echo "Usage: $(basename $0) VOLUME_ID DEVICE MOUNT_POINT"
  echo 
  echo "        VOLUME_ID - The Volume ID of the EBS volume you'd like to attach to this ec2 instance."
  echo "           DEVICE - The device location on the EC2 instance that you would like the EBS volume attached to."
  echo "                    Can be specified as 'auto' to automatically choose an available device."
  echo "      MOUNT_POINT - The location you would like the EBS Volume mounted to. (E.g. /ebs)"
  echo 
  exit
fi

VOLUME_ID=$1
DEVICE=$2
MOUNT_POINT=$3

# If the user specified auto we locate the next avaliable device location
if [ $DEVICE = "auto" ]; then
  if ls /dev/sdk* >/dev/null 2>&1; then
    LAST_DEVICE_NUMBER=`ls -1 /dev/sdk* | sed 's/[a-z\/]//g' | sort -n | tail -1`
    DEVICE_NUMBER=`expr $LAST_DEVICE_NUMBER + 1`
    DEVICE=/dev/sdk$DEVICE_NUMBER
  else
    DEVICE=/dev/sdk1
  fi
fi

# Check if volume is already attached to an instance
VOLUME_ATTACHED=(`ec2-describe-volumes $VOLUME_ID | grep "attached"`)
VOLUME_ATTACHED=${VOLUME_ATTACHED[2]}

# Check if volume is attached to this instance 
if [ "$VOLUME_ATTACHED" = "$INSTANCE_ID" ]; then
  echo "Volume is already atached to this instance..."

# Check if volume ia attached to another instance
elif [ $VOLUME_ATTACHED ]; then
  echo "Error: Volume is already attached to $VOLUME_ATTACHED"
  echo
  exit 1

# Attach volume
else 
  echo "Attaching EBS Volume..."
  ec2-attach-volume $VOLUME_ID --instance $INSTANCE_ID --device $DEVICE

  # If ec2-attach-volume exits with an error then exit script
  if [ ! $? = 0 ]; then
    echo "Error: Experienced problems while attaching EBS Volume."
    echo
    exit 1
  fi

  echo
  # Wait for the volume to be attached before we format and mount it
  while [ ! -e $DEVICE ]; do sleep 1; done
fi

echo "Formatting device with XFS file system..."
mkfs.xfs $DEVICE
echo

# Remove the EBS Volume from /etc/fstab
FSTAB_CONTENT=`grep " $MOUNT_POINT " /etc/fstab`;

if [ "$FSTAB_CONTENT" ]; then
  echo "Found an old entry for this device in fstab. Removing:"
  echo "$FSTAB_CONTENT"
  echo
  mv /etc/fstab /etc/fstab.bak
  grep -v " $MOUNT_POINT " /etc/fstab.bak > /etc/fstab
fi

# Mount the EBS Volume persistantly
echo "Adding mount point '$MOUNT_POINT' to fstab..."
echo
echo "$DEVICE $MOUNT_POINT xfs noatime 0 0" >> /etc/fstab

# Add cron entry to perform EBS Snapshots of this Volume
echo "Adding cron entry for ec2-consistent-snapshot to '/etc/cron.d/ebs-snapshots'..."
echo
echo "30 4 * * * i-create-snapshot $MOUNT_POINT true" >> /etc/cron.d/ebs-snapshots

echo "Creating mount point and mounting device..."
echo
if [ ! -d $MOUNT_POINT ]; then mkdir $MOUNT_POINT; fi
mount $MOUNT_POINT
